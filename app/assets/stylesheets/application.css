/*
 * This is a manifest file that'll be compiled into application.css.
 *
 * With Propshaft, assets are served efficiently without preprocessing steps. You can still include
 * application-wide styles in this file, but keep in mind that CSS precedence will follow the standard
 * cascading order, meaning styles declared later in the document or manifest will override earlier ones,
 * depending on specificity.
 *
 * Consider organizing styles into separate files for maintainability.
 */

 html {
  overflow-x: hidden;
 }
 
.min-b-screen {
  min-block-size: 100dvh; /* 100vh = 100% of the viewport height */
}
 
.min-b-screen-80 {
  min-block-size: 80dvh; /* 100vh = 80% of the viewport height */
}
 
.min-b-screen-90, .fixed-right-col {
  min-block-size: 90dvh; /* 90vh = 90% of the viewport height */
}

/* Style for the popover that holds the notifications */
.popover--notifications {
  /* Remove default popover padding to allow content to go edge-to-edge */
  --popover-padding: 0; 
}

/* The scrollable list inside the popover */
.popover__scrollable-list {
  /* Set a max-height. When content exceeds this, a scrollbar will appear. */
  max-block-size: 78dvh; /* 78% of the viewport height is a good starting point */
  overflow-y: auto;
}

.popover__item {
  transition: background-color var(--time-150);
}

.popover__item:hover {
  background-color: var(--color-border-light);
}

#settings-column {
  border-inline-start: none;
}

@media (width >= 64rem) {
  #settings-column {
    border-inline-start: 1px solid var(--color-border);
  }
}

/* Voice library */

/* The purple gradient for the icon wrapper. */
.bg-gradient-purple {
  background-image: linear-gradient(135deg, #C4B5FD, #A78BFA);
}

.min-b-0, .min-h-0 { min-block-size: 0; }

.fixed-player {
  position: fixed;
  bottom: 0;
  left: 0;
  right: 0;
  z-index: 50; /* Ensures it's above other page content */
  
  /* Styling */
  background-color: var(--color-bg); /* Uses your main background color variable */
  border-top: 1px solid var(--color-border);
}

.sample-icon-wrapper {
  display: flex;
  align-items: center;
  justify-content: center;
  inline-size: 1.5rem;
  block-size: 1.5rem;
  border-radius: var(--rounded-full);
}

/* Combines a fade-in and a slide-in-from-bottom effect */
.animate-fade-slide-in-up {
  /* The 'forwards' keyword ensures the element stays in its final state */
  animation: var(--animate-fade-in) forwards, var(--animate-slide-in-up) forwards;
}

/* Combines a fade-out and a slide-out-to-bottom effect */
.animate-fade-slide-out-down {
  animation: var(--animate-fade-out) forwards, var(--animate-slide-out-down) forwards;
}